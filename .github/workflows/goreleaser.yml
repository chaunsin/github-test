name: goreleaser

on:
  pull_request:
    branches: [ "" ]
  push:
    branches: [ "" ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "用于手动触发测试"
        required: true
        default: "true"

permissions:
  contents: write
  # packages: write
  # issues: write
  # id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Generate changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          head-ref: ${{ env.PREVIOUS_TAG }}
          filter-author: (dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'
          template: |
            ## Bugs
            {{fix,bug}}
            ## Feature
            {{feat,feature}}
            ## Improve
            {{refactor,perf,clean,optimize}}
            ## Deprecated
            {{deprecated}}
            ## Golang Dependencies
            {{depend,dep,deps}}
            ## Misc
            {{chore,style,ci,docs,doc,test,script||🔶 Nothing change}}
            ## Other
            {{__unknown__}}

      # 打印 changelog
      - name: Print Changelog
        run: |
          echo "Changelog:"
          echo "${{ steps.changelog.outputs.changelog }}"
          echo "${{ steps.changelog.outputs.changelog }}" > CHANGELOG.md
          echo "Compare URL: ${{ steps.changelog.outputs.compareurl }}"
          echo "GitHub Pages Hash: ${{ steps.changelog.outputs.gh-pages-hash }}"

      # More assembly might be required: Docker logins, GPG, etc.
      # It all depends on your needs.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "~> v2"
          args: release --clean --release-notes=./CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Your GoReleaser Pro key, if you are using the 'goreleaser-pro' distribution
          # GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
