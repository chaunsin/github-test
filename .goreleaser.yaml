# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

# 项目名称
project_name: nocgo

# 构建输出目录默认dist
dist: ./dist

# 构建前钩子 https://goreleaser.com/customization/builds/hooks/
before:
  hooks:
  # You may remove this if you don't use go modules.
  #    - go mod tidy
  # you may remove this if you don't need go generate
#    - go generate ./...

# 构建配置 https://goreleaser.com/customization/builds/go/
builds:
  - env:
      - CGO_ENABLED=0
    # 当项目的根目录不是go项目，需要指定目录位置,反之则直接使用main即可
    dir: ./go/nocgo/
    #main: ./go/nocgo/
    main: main.go
    binary: nocgo
    ldflags:
      - -s -w -X "main.Version={{.Version}}" -X "main.Commit={{.ShortCommit}}" -X "main.BuildTime={{.CommitDate}}"

    # Default: [ 'darwin', 'linux', 'windows' ]
    # 可参考: go tool dist list
    # https://pkg.go.dev/cmd/go#hdr-Environment_variables
    goos:
      - linux
      - windows
      - darwin
      - freebsd
      - openbsd
      - netbsd

    # Default: [ '386', 'amd64', 'arm64' ]
    # 可参考: go tool dist list
    # https://pkg.go.dev/cmd/go#hdr-Environment_variables
    goarch:
      - amd64
      - arm
      - arm64
      - 386
      - ppc64
      - riscv64
      - s390x
      - ppc64le
      - mips
      - mipsle
      - mips64
      - mips64le
      - loong64
      - wasm

    # Default: v1
    goamd64:
      - v1
    #      - v2
    #      - v3

    # Default: 6
    goarm:
      - 6
    #      - 7

    # Default: 'v8.0'
    goarm64:
      - v8.0
    #      - v9.0

    # Default: hardfloat
    gomips:
      - hardfloat
    #      - softfloat

    # Default: sse2
    go386:
      - sse2
    #      - softfloat

    # Default: power8
    goppc64:
      - power8
    #      - power9

    # Default: rva20u64
    goriscv64:
      - rva22u64

archives:
  - formats: [ 'tar.gz' ]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    #allow_different_binary_count: true

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

signs:
  - artifacts: checksum
    cmd: gpg2
    args:
      - "--batch"
      - "-pinentry-mode=loopback"
      - "-passphrase"
      - "{{ .Env.PASSPHRASE }}"
      - "-u"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
